// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudyGO.infrastructure.Data;

#nullable disable

namespace StudyGO.infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250731095946_Update")]
    partial class Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudyGO.infrastructure.Entites.FormatEntity", b =>
                {
                    b.Property<int>("FormatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FormatID"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FormatID");

                    b.ToTable("FormatsEntity");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.SubjectEntity", b =>
                {
                    b.Property<Guid>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("SubjectID");

                    b.ToTable("SubjectsEntity");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.TutorProfileEntity", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FormatID")
                        .HasColumnType("integer");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("numeric");

                    b.HasKey("UserID");

                    b.HasIndex("FormatID");

                    b.ToTable("TutorProfilesEntity");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.UserEntity", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Number")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("UserID");

                    b.ToTable("UsersEntity");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.UserProfileEntity", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SubjectID")
                        .HasColumnType("uuid");

                    b.HasKey("UserID");

                    b.HasIndex("SubjectID");

                    b.ToTable("UserProfileEntity");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.TutorProfileEntity", b =>
                {
                    b.HasOne("StudyGO.infrastructure.Entites.FormatEntity", "Format")
                        .WithMany("TutorProfiles")
                        .HasForeignKey("FormatID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudyGO.infrastructure.Entites.UserEntity", "User")
                        .WithOne("TutorProfile")
                        .HasForeignKey("StudyGO.infrastructure.Entites.TutorProfileEntity", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Format");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.UserProfileEntity", b =>
                {
                    b.HasOne("StudyGO.infrastructure.Entites.SubjectEntity", "FavoriteSubject")
                        .WithMany("UserProfiles")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("StudyGO.infrastructure.Entites.UserEntity", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("StudyGO.infrastructure.Entites.UserProfileEntity", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriteSubject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.FormatEntity", b =>
                {
                    b.Navigation("TutorProfiles");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.SubjectEntity", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("StudyGO.infrastructure.Entites.UserEntity", b =>
                {
                    b.Navigation("TutorProfile");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
